import numpy as np

def hill_cipher_encrypt(message, key_matrix):
    message = message.lower().replace(" ", "").ljust(2, 'x')
    key_matrix = np.array(key_matrix).reshape(2, 2)
    det = key_matrix[0, 0] * key_matrix[1, 1] - key_matrix[0, 1] * key_matrix[1, 0]
    mod_inv_det = next((i for i in range(1, 26) if (det * i) % 26 == 1), None)

    if mod_inv_det is None:
        return "Key matrix is not invertible."

    encrypted_message = ""
    for i in range(0, len(message), 2):
        block = np.array([ord(message[i]) - ord('a'), ord(message[i + 1]) - ord('a')])
        encrypted_block = (key_matrix @ block) % 26
        encrypted_message += "".join(chr(num + ord('a')) for num in encrypted_block)
    
    return encrypted_message

if __name__ == "__main__":
    key = [[3, 3], [2, 5]]  # Replace this with your 2x2 key matrix
    message = input("Enter the message to encrypt: ")
    
    encrypted_message = hill_cipher_encrypt(message, key)
    print("Encrypted message:", encrypted_message)
hill
